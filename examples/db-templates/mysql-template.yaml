apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ex288-php-mysql
  labels:
    template: php-app
  annotations:
    openshift.io/display-name: PHP + MySQL (Persistent)
    description: >
      This template deploys a two-tier application with PHP and MySQL, pulling source code from a Git repository.
    tags: php,mysql,quickstart
parameters:
  - name: DATABASE_SERVICE_NAME
    description: The name of the database service.
    value: mysql
  - name: MYSQL_USER
    description: Username for MySQL.
    value: user
  - name: MYSQL_PASSWORD
    description: Password for MySQL.
    value: password
  - name: MYSQL_DATABASE
    description: Name of the MySQL database.
    value: sampledb
  - name: MYSQL_ROOT_PASSWORD
    description: Password for the MySQL root user.
    value: rootpassword
  - name: PHP_VERSION
    description: Version of PHP to use.
    value: "8.0"
  - name: MYSQL_VERSION
    description: Version of MySQL to use.
    value: "8.0-el8"
  - name: SOURCE_REPOSITORY_URL
    description: Git repository URL for the application source code.
    value: "https://github.com/example/php-app"
  - name: SOURCE_REPOSITORY_REF
    description: Branch or tag in the Git repository.
    value: "main"
  - name: CONTEXT_DIR
    description: Subdirectory for the application source code, if applicable.
    value: ""
  - name: NAMESPACE
    description: The OpenShift namespace where the PHP ImageStream resides.
    value: openshift
objects:
  - apiVersion: build.openshift.io/v1
    kind: BuildConfig
    metadata:
      name: php-app
      labels:
        template: php-app
    spec:
      source:
        type: Git
        git:
          uri: "${SOURCE_REPOSITORY_URL}"
          ref: "${SOURCE_REPOSITORY_REF}"
        contextDir: "${CONTEXT_DIR}"
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            namespace: "${NAMESPACE}"
            name: php:${PHP_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: php-app:latest
  - apiVersion: image.openshift.io/v1
    kind: ImageStream
    metadata:
      name: php-app
      labels:
        template: php-app
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: php-app
      labels:
        template: php-app
    spec:
      replicas: 1
      selector:
        app: php-app
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            app: php-app
        spec:
          containers:
            - name: php
              image: php-app:latest
              ports:
                - containerPort: 8080
                  protocol: TCP
              env:
                - name: MYSQL_USER
                  value: "${MYSQL_USER}"
                - name: MYSQL_PASSWORD
                  value: "${MYSQL_PASSWORD}"
                - name: MYSQL_DATABASE
                  value: "${MYSQL_DATABASE}"
                - name: MYSQL_SERVICE_HOST
                  value: "${DATABASE_SERVICE_NAME}"
              readinessProbe:
                httpGet:
                  path: /
                  port: 8080
                initialDelaySeconds: 5
                timeoutSeconds: 3
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: "${DATABASE_SERVICE_NAME}"
      labels:
        template: php-app
    spec:
      replicas: 1
      selector:
        app: "${DATABASE_SERVICE_NAME}"
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: "${DATABASE_SERVICE_NAME}"
        spec:
          containers:
            - name: mysql
              image: "mysql:${MYSQL_VERSION}"
              ports:
                - containerPort: 3306
                  protocol: TCP
              env:
                - name: MYSQL_USER
                  value: "${MYSQL_USER}"
                - name: MYSQL_PASSWORD
                  value: "${MYSQL_PASSWORD}"
                - name: MYSQL_DATABASE
                  value: "${MYSQL_DATABASE}"
                - name: MYSQL_ROOT_PASSWORD
                  value: "${MYSQL_ROOT_PASSWORD}"
              volumeMounts:
                - name: mysql-data
                  mountPath: /var/lib/mysql
          volumes:
            - name: mysql-data
              persistentVolumeClaim:
                claimName: mysql-data-claim
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: mysql-data-claim
      labels:
        template: php-app
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
